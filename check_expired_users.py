import os
import shutil
import subprocess
import psycopg2
from datetime import datetime, timezone
from db import get_db_connection

EASYRSA_PATH = "/root/openvpn-ca"
ISSUED_CERTS_PATH = "/root/openvpn-ca/pki/issued"
PRIVATE_KEYS_PATH = "/root/openvpn-ca/pki/private"
REVOKED_CERTS_PATH = "/root/openvpn-ca/pki/revoked_issued"
REVOKED_KEYS_PATH = "/root/openvpn-ca/pki/revoked_private"
CRL_PATH = "/root/openvpn-ca/pki/crl.pem"
OPENVPN_CRL_DEST = "/etc/openvpn/crl.pem"

def revoke_certificate(username):
    """–û—Ç–∑—ã–≤–∞–µ—Ç —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ–±–Ω–æ–≤–ª—è–µ—Ç CRL –∏ —Å—Ç–∞—Ç—É—Å –≤ –ë–î, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –æ—Ç–æ–∑–≤–∞–Ω."""
    conn = get_db_connection()
    cursor = conn.cursor()

    cursor.execute("SELECT status FROM vpn_users WHERE username = %s", (username,))
    user_status = cursor.fetchone()

    if user_status and user_status[0] == 'inactive':
        print(f"‚ö†Ô∏è –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç {username} —É–∂–µ –æ—Ç–æ–∑–≤–∞–Ω (—Å—Ç–∞—Ç—É—Å: inactive). –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        cursor.close()
        conn.close()
        return

    cert_path = os.path.join(ISSUED_CERTS_PATH, f"{username}.crt")
    key_path = os.path.join(PRIVATE_KEYS_PATH, f"{username}.key")
    revoked_cert_path = os.path.join(REVOKED_CERTS_PATH, f"{username}.crt")
    revoked_key_path = os.path.join(REVOKED_KEYS_PATH, f"{username}.key")

    try:
        # –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ –ø–∞–ø–∫—É –æ—Ç–æ–∑–≤–∞–Ω–Ω—ã—Ö –î–û –æ—Ç–∑—ã–≤–∞
        if os.path.exists(cert_path):
            shutil.copy(cert_path, revoked_cert_path)
        if os.path.exists(key_path):
            shutil.copy(key_path, revoked_key_path)

        print(f"‚õî –û—Ç–∑—ã–≤–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç {username}...")
        process = subprocess.Popen(
            [os.path.join(EASYRSA_PATH, "easyrsa"), "revoke", username],
            cwd=EASYRSA_PATH,
            stdin=subprocess.PIPE,
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE
        )
        process.communicate(input=b"yes\n")

        print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º CRL...")
        subprocess.run(
            [os.path.join(EASYRSA_PATH, "easyrsa"), "gen-crl"],
            cwd=EASYRSA_PATH,
            check=True
        )

        print(f"üìÇ –ö–æ–ø–∏—Ä—É–µ–º –Ω–æ–≤—ã–π CRL –≤ {OPENVPN_CRL_DEST}...")
        subprocess.run(["cp", CRL_PATH, OPENVPN_CRL_DEST], check=True)

        print(f"‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç {username} –æ—Ç–æ–∑–≤–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ {REVOKED_CERTS_PATH}")

        print("üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º OpenVPN...")
        subprocess.run(["systemctl", "restart", "openvpn"], check=True)
        print("‚úÖ OpenVPN –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")

        cursor.execute("UPDATE vpn_users SET status = %s WHERE username = %s", ("inactive", username))
        conn.commit()
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} –æ–±–Ω–æ–≤–ª—ë–Ω –Ω–∞ inactive")

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∑—ã–≤–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ {username}: {e}")
    finally:
        cursor.close()
        conn.close()

def check_expired_users():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –æ—Ç–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã."""
    conn = get_db_connection()
    cursor = conn.cursor()

    cursor.execute("SELECT username, expiration_date FROM vpn_users WHERE expiration_date IS NOT NULL")
    users = cursor.fetchall()

    for username, expiration_date in users:
        if expiration_date and expiration_date < datetime.now(timezone.utc):
            print(f"‚õî –ü–æ–¥–ø–∏—Å–∫–∞ {username} –∏—Å—Ç–µ–∫–ª–∞. –ë–ª–æ–∫–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø...")
            revoke_certificate(username)

    cursor.close()
    conn.close()

if __name__ == "__main__":
    check_expired_users()
